{
    "server/main.py": "**Summary:** The file sets up a FastAPI application with database initialization, CORS configuration, logging middleware, and static file serving.\n\n**Logical Blocks:**\n\n1. **Database Initialization (5-7 lines)**\n\t* Initialize database connection using `init_db` function.\n2. **CORS Configuration (9-12 lines)**\n\t* Define allowed origins, credentials, methods, and headers for CORS.\n3. **Logging Middleware (14-15 lines)**\n\t* Add logging middleware to the application.\n4. **Static File Serving (16-17 lines)**\n\t* Mount a static file directory at `/static` prefix.\n5. **Router Configuration (18-19 lines)**\n\t* Include `v1_router` router with prefix `/v1`.",
    "server/run.py": "**High-level Summary**: This Python script sets up a web server using Uvicorn and deploys it to run on a specified port.\n\n**Logical Blocks:**\n\n1. **Importing Modules** (line 2-3)\n\t* Importing os module for environment variables.\n\t* Importing uvicorn module for running the web application.\n2. **Main Execution Block** (line 5-6)\n\t* Check if the script is being run directly (not imported as a module).\n\t* If true, execute the code to set up and run the web server.\n\nNo other logical blocks found in this file.",
    "./games/space_invaders.py": "**Summary:**\n\nThis is a Python script for a Space Invaders game using the Pygame library.\n\n**Logical Blocks:**\n\n1. **Initialization and Setup (1-7)**\nInitialize Pygame, set up the screen, and define colors.\n2. **Game Entities (8-20)**\nCreate game entities: player, bullet, and enemies.\n3. **Main Game Loop (21-41)**\nHandle user input, update game state, and draw game elements on the screen.\n4. **Drawing and Updating Screen (42-46)**\nDraw all game elements on the screen, and update the screen.\n5. **Game Logic (47-51)**\nCheck for collisions between bullet and enemies, and reset game state if necessary."
}